{"remainingRequest":"/Users/tarikpelko/Desktop/Jenita/dzenhadz.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tarikpelko/Desktop/Jenita/dzenhadz.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/tarikpelko/Desktop/Jenita/dzenhadz.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tarikpelko/Desktop/Jenita/dzenhadz.github.io/src/components/Terminal.vue?vue&type=template&id=4e4a14ac&","dependencies":[{"path":"/Users/tarikpelko/Desktop/Jenita/dzenhadz.github.io/src/components/Terminal.vue","mtime":1653944576275},{"path":"/Users/tarikpelko/Desktop/Jenita/dzenhadz.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1653944796668},{"path":"/Users/tarikpelko/Desktop/Jenita/dzenhadz.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1653944797253},{"path":"/Users/tarikpelko/Desktop/Jenita/dzenhadz.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1653944796668},{"path":"/Users/tarikpelko/Desktop/Jenita/dzenhadz.github.io/node_modules/vue-loader/lib/index.js","mtime":1653944797125}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}